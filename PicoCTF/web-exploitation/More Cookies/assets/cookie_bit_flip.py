import requests
import base64
from tqdm import tqdm

url = "http://mercury.picoctf.net:56136/"  ## update as per challenge
session = requests.Session()
session.get(url)
cookie = session.cookies["auth_name"]      # getting cookie
decoded_cookie = base64.b64decode(base64.b64decode(cookie))  # base64 decoing twice as cookie is encoded twice


for byte_number in tqdm(range(len(decoded_cookie)),desc="Trying Byte"):  # Looping through bytes

    flag_found = 0  # A flag to break the loop when flag is found
    
    for bit_number in tqdm(range(8),desc="Trying Bit"):  # Loop through each bit in a selected byte
        bitflip_cookie = (decoded_cookie[0:byte_number] + ((decoded_cookie[byte_number] ^ (1 << bit_number)).to_bytes(1, "big")) + decoded_cookie[byte_number + 1 :])  # bit flipping the position
        updated_cookie = base64.b64encode(base64.b64encode(bitflip_cookie)).decode() # encoding and converting the bytes back to utf-8 string using decode()

        response = requests.get(url, cookies={"auth_name": updated_cookie}) # making request with new cookie

        if "picoCTF{".lower() in response.text.lower():  # checking if the the response has our flag. Include { as the page has a trademark symbol
            print("\n")
            print("\n\n Cookie Used :",updated_cookie)   # prints the cookie which gave us flag
            print("\n Flag:",response.text.split("<code>")[1].split("</code>")[0],"\n\n") # prints out the flag as it is in <code> block
            flag_found = 1  # setting flag to break outer loop
            break       # breaking inner loop
    
    if flag_found == 1:  # if condition to break outer loop based on flag
        break

